#SVM : sentiment

import re
f = open ('sentiwordlist','r')
sentiment_dict = {}

for line in f:
	words = line.split(' ')
	sentiment_dict[words[0]] = words[1]

#!/usr/bin/python

import sys

import re
f = open(sys.argv[1],'r')
qid = 0
dict = {}
word_count = {}
rev_dict = {}
index = 1
for line in f:
	contents = line.split('\t')
	if len(contents) ==2 and "Scene" not in line:
		dialogue = contents[0].lower()
		words = re.findall(r"[\w']+|[.:,!?;]",dialogue)
		if len(dialogue) == 0:
			continue
		first_word = words[0]
		speaker = first_word+':'
		
		words.append(speaker)
		for word in words:
			if word not in dict:
				dict[word] = index
				rev_dict[index] = word
				index += 1
				word_count[word] = 1
			else:
				word_count[word] += word_count[word] 

pos_index = index
neg_index = index+1

f = open(sys.argv[1],'r')

for line in f:
	s_line = ''
	contents = line.split('\t')
	pos_score = 0
	neg_score = 0
	if "Scene" in line:
		qid +=1
	
	if len(contents) >=2 and contents[1] in ('yes\n','no\n'):
		#print(contents)
		word_ids = [1]
		dialogue = contents[0].lower()
		words = re.findall(r"[\w']+|[.,!?;]",dialogue)
		if len(dialogue) == 0:
			continue
		first_word = words[0]
		speaker = first_word+':'
		
		words.append(speaker)
		
		for word in words:
			if word in dict:
				if word.lower() in sentiment_dict:
					sentiment = sentiment_dict[word.lower()]
					
					if int(sentiment) == 1:
						#print(word+' found as positive')
						pos_score += 1
					else:
						#print(word+' found as negative')
						neg_score += 1
				index = dict[word]
				if word_count[word] >= 3:
					word_ids.append(index)
		
		if contents[1].strip() == 'yes':
			label = '+1'
		else:
			label = '-1'
		

		word_ids = list(set(word_ids))
		word_ids.sort()
		s_line = label+' '
		#print(word_ids)
		#for id in word_ids:
		#	s_line += str(id)+':1 '
		s_line += ' '+str(pos_index)+':'+str(pos_score)+' '+str(neg_index)+':'+str(neg_score)+' '
		s_line += '# '+line
		s_line = s_line.strip()
		print(s_line)
